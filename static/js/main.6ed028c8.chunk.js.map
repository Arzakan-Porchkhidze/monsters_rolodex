{"version":3,"sources":["components/search/search.jsx","components/card/card.jsx","components/card-list/card-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","setSearchField","placeholder","type","className","onChange","e","target","value","Card","monster","alt","src","id","name","email","CardLIst","monsters","map","App","useState","setMonsters","searchField","useEffect","fetch","then","response","json","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAeeA,G,YAXA,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,YAC7B,OAEA,uBAAOC,KAAK,SACZC,UAAU,SACVF,YAAaA,EACbG,SAAU,SAACC,GAAD,OAAOL,EAAeK,EAAEC,OAAOC,YCK9BC,G,MAXF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OAEI,sBAAKN,UAAU,iBAAf,UACI,qBAAMO,IAAI,UAAUC,IAAG,+BAA0BF,EAAQG,GAAlC,4BACvB,6BAAMH,EAAQI,OACd,4BAAIJ,EAAQK,UAHsBL,EAAQG,MCOvCG,G,MATG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEhB,OACI,qBAAKb,UAAU,YAAf,SACKa,EAASC,KAAK,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCiB1CM,MApBf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNH,EADM,KACII,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOrB,EAFP,KAIbsB,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIL,EAAYK,QAC9B,IAEF,IAAME,EAAmBX,EAASY,QAAO,SAAAnB,GAAO,OAAIA,EAAQI,KAAKgB,cAAcC,SAAST,MACxF,OACE,sBAAKlB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQH,eAAgBA,EAAgBC,YAAa,oBACrD,cAAC,EAAD,CAAUe,SAAUW,QCTXI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ed028c8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./search.css\";\n\n\nconst Search = ({setSearchField, placeholder}) => {\n    return (\n    \n    <input type='search'\n    className='search'\n    placeholder={placeholder}\n    onChange={(e) => setSearchField(e.target.value)} \n    />\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport \"./card.css\";\n\n\nconst Card = ({monster}) => {\n    return(\n\n        <div className='card-container'  key={monster.id}>\n            <img  alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\n            <h2 >{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from \"../card/card\";\nimport \"./cardlist.css\";\n\n\nconst  CardLIst = ({monsters}) => {\n\n    return(\n        <div className='card-list'>\n            {monsters.map( monster => <Card key={monster.id} monster={monster}/> )}\n        </div>\n    )\n}\n\nexport default CardLIst;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Search from \"./components/search/search\";\nimport CardList from \"./components/card-list/card-list\";\n\n\nfunction App() {\n  const [monsters, setMonsters] = useState([])\n  const [searchField, setSearchField] = useState('')\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(response => setMonsters(response))\n  },[])\n\n  const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField))\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <Search setSearchField={setSearchField} placeholder={'search monsters'} />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}